<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scott Wang</title>
    <description>欢迎来到我的个人xiao站~</description>
    <link>http://scott-cry.win//</link>
    <atom:link href="http://scott-cry.win//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 03 Apr 2017 20:36:15 +0800</pubDate>
    <lastBuildDate>Mon, 03 Apr 2017 20:36:15 +0800</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>React Native搭建开发环境</title>
        <description>&lt;p&gt;　　React Native的开发环境配置直接参考官方文档即可完成，不过对小白来说东西有点多，有些名词不是很好理解，这里就(官方的&lt;a href=&quot;http://facebook.github.io/react-native/&quot;&gt;安装文档&lt;/a&gt;稍微展开说一下。&lt;a href=&quot;http://reactnative.com/&quot;&gt;http://reactnative.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　译注：如果&lt;code class=&quot;highlighter-rouge&quot;&gt;阅读完教程&lt;/code&gt;后还碰到很多环境搭建的问题，我们建议你还可以再看看由&lt;a href=&quot;http://reactnative.cn/&quot;&gt;reactnative.cn&lt;/a&gt;提供的&lt;a href=&quot;http://v.youku.com/v_show/id_XMTQ4OTYyMjg4MA==.html&quot;&gt;环境搭建视频教程&lt;/a&gt;、&lt;a href=&quot;http://bbs.reactnative.cn/topic/10&quot;&gt;windows环境搭建文字教程&lt;/a&gt;、以及&lt;a href=&quot;http://bbs.reactnative.cn/topic/130&quot;&gt;常见问题&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;安装&lt;/h2&gt;

&lt;h3 id=&quot;homebrew&quot;&gt;1、安装HomeBrew&lt;/h3&gt;
&lt;p&gt;第一: 通过命令行安装HomeBrew&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby -e “$(curl –insecure -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)”
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第二: 查询HomeBrew的版本&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;XXXXX-Mac:~ scottwang$ brew -v
Homebrew 1.1.11
Homebrew/homebrew-core (git revision 8663; last commit 2017-04-02)
XXXXX-Mac:~ scottwang$
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;　　至此说明HomeBrew已经安装成功。&lt;/p&gt;

&lt;h3 id=&quot;nodejs&quot;&gt;2、安装NodeJs&lt;/h3&gt;
&lt;p&gt;使用&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;来安装&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;
（对解析JS所需的环境node+安装之后你就可以用npm命令了）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;XXXXXX-Mac:~ scottwang$ brew install node
......
XXXXXX-Mac:~ scottwang$ node -v
v6.10.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;　　安装完node后建议设置&lt;a href=&quot;https://www.baidu.com/s?ie=UTF-8&amp;amp;wd=npm%E9%95%9C%E5%83%8F%E4%BB%A5%E5%8A%A0%E9%80%9F&quot;&gt;npm镜像&lt;/a&gt;以加速后面的过程（或使用&lt;a href=&quot;https://www.baidu.com/s?ie=utf-8&amp;amp;f=8&amp;amp;rsv_bp=1&amp;amp;rsv_idx=1&amp;amp;tn=baidu&amp;amp;wd=%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91&amp;amp;oq=npm%25E9%2595%259C%25E5%2583%258F%25E4%25BB%25A5%25E5%258A%25A0%25E9%2580%259F&amp;amp;rsv_pq=ac6ecffc000569a4&amp;amp;rsv_t=a6dfnk2LVwrQb%2BMub1C9r%2F5C4E2fs8%2F7LK8FpawDEhScyN4%2FQESXgaxOu0g&amp;amp;rqlang=cn&amp;amp;rsv_enter=0&amp;amp;rsv_sug3=2&amp;amp;rsv_sug1=1&amp;amp;rsv_sug7=000&amp;amp;inputT=795&amp;amp;rsv_sug4=1384&amp;amp;rsv_sug=1&quot;&gt;科学上网工具&lt;/a&gt;),因为天朝的网络你懂得。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm config set registry https://registry.npm.taobao.org --global
npm config set disturl https://npm.taobao.org/dist --global
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;react-nativereact-native-cli&quot;&gt;3、React Native的命令行工具（react-native-cli）&lt;/h3&gt;
&lt;p&gt;React Native的命令行工具用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g react-native-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果你看到EACCES: permission denied这样的权限报错，那么请参照上文的homebrew译注，修复/usr/local目录的所有权：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chown -R `whoami` /usr/local
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;xcode&quot;&gt;4、Xcode&lt;/h3&gt;
&lt;p&gt;React Native目前需要Xcode 7.0 或更高版本。你可以通过App Store或是到&lt;a href=&quot;https://developer.apple.com/xcode/downloads/&quot;&gt;Apple开发者官网&lt;/a&gt;上下载。这一步骤会同时安装Xcode IDE和Xcode的命令行工具。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
虽然一般来说命令行工具都是默认安装了，但你最好还是启动Xcode，并在Xcode | Preferences | Locations菜单中检查一下是否装有某个版本的Command Line Tools。Xcode的命令行工具中也包含一些必须的工具，比如git等。
&lt;/code&gt;
### 5、测试安装&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native init reactIOS
cd reactIOS
react-native run-ios
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;react-nativeide&quot;&gt;6、React Native开发工具IDE&lt;/h3&gt;
&lt;p&gt;所谓工欲善其事必先利其器,做React Native开发也和其他应用开发一样，但是工具有很多种，可能每个公司用的也不一样。下节就给大家介绍几款比较好用的IDE:&lt;a href=&quot;http://www.sublimetext.com/3&quot;&gt;sublime&lt;/a&gt;、&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;webstorm&lt;/a&gt;以及官网推荐的&lt;a href=&quot;https://atom.io/&quot;&gt;Nuclide&lt;/a&gt;、&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VSCode&lt;/a&gt;-&lt;a href=&quot;http://www.vscode.org/&quot;&gt;中文&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;转载请注明原地址，LCry的博客：&lt;a href=&quot;http://scott-cry.win/&quot;&gt;http://scott-cry.win/&lt;/a&gt; 谢谢！&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://scott-cry.win//2017/04/React-Native%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
        <guid isPermaLink="true">http://scott-cry.win//2017/04/React-Native%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
        
        <category>React Native</category>
        
        
      </item>
    
      <item>
        <title>React Native IDE选型和配置</title>
        <description>&lt;p&gt;　　React Native 的开发基本上是 Javascript ＋ 系统原生开发语言（Java，Objective-C，Swift），原生语言的开发所用的 IDE 没有多余的选择，Android 平台只能使用 Android Studio（不要告诉我你还在使用 Eclipse），iOS 平台只能使用 XCode，而开发 Javascript 的 IDE 选择就多了，从 FaceBook 官方推荐的 Atom＋Nuclide，到与 Android Studio 同系列的 Javascript IDE WebStorm，再到功能强大的 Sublime Text 3，以及微软推出的 Visual Studio Code 和 decosoftware 专门为 React Native 打造的开源 IDE Deco，甚至 Vim，NodePad++ 等等，都可以用来开发 React Native，唯一的前提能够支持识别 Javascript 语法，识别 JSX 和 React Native API 的智能提醒。接下来我们就来介绍最常用的五款 IDE 的配置和选型。&lt;/p&gt;

&lt;h2 id=&quot;react-native-ide&quot;&gt;React Native IDE&lt;/h2&gt;

&lt;h3 id=&quot;atom--nuclide&quot;&gt;1、Atom + Nuclide&lt;/h3&gt;
&lt;p&gt;　　第一: &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;是由 Github 打造的下一代编程开发利器，支持 Windows、Mac OS X、Linux 三大桌面平台，免费且开源。&lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;  支持各种编程语言的代码高亮，同时具备强大的代码补全功能，能够极大的提高编程效率，&lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;  本质上是一个文本编辑器，而不是一个 IDE，因此在用来开发 React Native 时需要配合 Nuclide 一起使用。
&lt;img src=&quot;/images/react/20170403/atom.io.png&quot; height=&quot;460&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;　　第二: &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;已经安装成功了，下面开始安装&lt;a href=&quot;https://github.com/facebook/nuclide&quot;&gt;Nuclide&lt;/a&gt;，直接打开Atom软件，点击Atom-&amp;gt; Preferences打开Setting，然后点击install，输入nuclide-installer搜索，进行下载即可
&lt;img src=&quot;/images/react/20170403/nuclide.io.png&quot; height=&quot;360&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;webstorm-ide&quot;&gt;2、WebStorm IDE介绍和安装&lt;/h3&gt;
&lt;p&gt;　　我相信做过Web前端的童鞋们，肯定对WebStorm IDE非常的熟悉WebStorm 是jetbrains公司旗下一款JavaScript开发工具。被广大中国JS开发者誉为“Web前端开发神器”、“最强大的HTML5编辑器”、“最智能的JavaScript IDE”等。与IntelliJ IDEA同源，继承了IntelliJ IDEA强大的JS部分的功能。该IDE官网地址:&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;https://www.jetbrains.com/webstorm/&lt;/a&gt;。该新版本已经支持了React了，所以在现如今的开发阶段WebStrom已经算是支持性最好的IDE了，大家有兴趣可以下载使用以下哦~，不过该是收费的,相信你也会有&lt;a href=&quot;https://www.baidu.com/s?ie=utf-8&amp;amp;f=3&amp;amp;rsv_bp=1&amp;amp;rsv_idx=1&amp;amp;tn=baidu&amp;amp;wd=webstorm%2010%20%E6%B3%A8%E5%86%8C%E7%A0%81&amp;amp;oq=webstorm&amp;amp;rsv_pq=8b460dd700068735&amp;amp;rsv_t=aaacEWo%2BiGh1ZpNk2F8Ye6bDjqd8KJbUPUn9nY22TI1NZAUaZjMI%2FdQCZzI&amp;amp;rqlang=cn&amp;amp;rsv_enter=1&amp;amp;rsv_sug3=7&amp;amp;rsv_sug1=6&amp;amp;rsv_sug7=100&amp;amp;rsv_sug2=1&amp;amp;prefixsug=webstorm&amp;amp;rsp=0&amp;amp;rsv_sug4=2224&quot;&gt;办法&lt;/a&gt;的。&lt;/p&gt;

&lt;h3 id=&quot;sublime-text-3&quot;&gt;3、Sublime Text 3&lt;/h3&gt;
&lt;p&gt;　　Sublime Text 3 是一款广泛使用的代码编辑器，支持 Windows、Mac OS X、Linux 三大桌面平台，它是付费应用，但目前可以无限期的试用。它支持多种编程语言的语法高亮、拥有优秀的代码自动完成功能，还拥有代码片段（Snippet ）的功能，可以将常用的代码片段保存起来，在需要时随时调用，极大的提高编程效率。
　　一、简单的安装方法
　　使用Ctrl+`快捷键或者通过View-&amp;gt;Show Console菜单打开命令行，粘贴如下代码：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
import urllib.request,os,hashlib; h = &#39;df21e130d211cfc94d9b0905775a7c0f&#39; + &#39;1e3d39e33b79698005270310898eea76&#39;; pf = &#39;Package Control.sublime-package&#39;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &#39;http://packagecontrol.io/&#39; + pf.replace(&#39; &#39;, &#39;%20&#39;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&#39;Error validating download (got %s instead of %s), please try manual install&#39; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &#39;wb&#39; ).write(by)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果顺利的话，此时就可以在Preferences菜单下看到Package Settings和Package Control两个菜单了。
如有问题 参考:&lt;a href=&quot;https://packagecontrol.io/installation#st3&quot;&gt;https://packagecontrol.io/installation#st3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;　　二、安装插件 babel-sublime
　　支持ES6， React.js, jsx代码高亮，对 JavaScript, jQuery 也有很好的扩展。
　　安装&lt;/p&gt;

&lt;p&gt;　　PC上ctrl+shift+p（MacCmd+shift+p）打开面板
　　选择Install Package
　　输入babel安装&lt;/p&gt;

&lt;p&gt;　　配置&lt;/p&gt;

&lt;p&gt;　　打开.js, .jsx 后缀的文件;&lt;/p&gt;

&lt;p&gt;　　打开菜单view，Syntax -&amp;gt; Open all with current extension as… -&amp;gt; Babel -&amp;gt; 　　JavaScript (Babel)，选择babel为默认 javascript 打开syntax&lt;/p&gt;

&lt;p&gt;　　修改TAB缩进为空格&lt;/p&gt;

&lt;p&gt;　　在sublime text中将TAB缩进直接转化为4个空格，可以按照如下方式操作：&lt;/p&gt;

&lt;p&gt;　　菜单栏: Preferences -&amp;gt; Settings – More -&amp;gt; Syntax Specific – User&lt;/p&gt;

&lt;p&gt;　　然后添加设置代码就可以了，文件保存在$Packages/User下&lt;/p&gt;

&lt;p&gt;　　另：
　　font_face 设置字体
　　font_size 设置字体大小&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;font_face&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SourceCodePro&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;font_size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;tab_size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;translate_tabs_to_spaces&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;vs-code&quot;&gt;3、VS Code&lt;/h3&gt;
&lt;p&gt;　　React Native智能开发工具，可代码提醒的IDE——VS Code。
　　安装VS Code方法非常简单，去github上下载插件，直接安装在电脑就可以了。
　　插件地址:&lt;a href=&quot;https://github.com/Microsoft/vscode-react-native&quot;&gt;https://github.com/Microsoft/vscode-react-native&lt;/a&gt;
　　它具有打开文件夹功能，定位到React Native项目的根目录直接使用文件夹打开功能就可以，这样就可以把整个项目目录放进去了&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://scott-cry.win//2017/04/React-Native%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</link>
        <guid isPermaLink="true">http://scott-cry.win//2017/04/React-Native%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/</guid>
        
        <category>React Native</category>
        
        
      </item>
    
      <item>
        <title>HEXO搭建个人博客</title>
        <description>&lt;p&gt;　　经过各种找资料，踩过各种坑，终于使用 hexo 搭建个人博客初步完成了，域名目前用得时 github 的，我的 hexo 是 3.1.1 版本，hexo 不同的版本，很多配置都不一样。好吧，废话不多说了，开始吧。&lt;/p&gt;

&lt;p&gt;　　本篇文章累计了大量评论，和我的一些解答，读者有什么问题可以先看看评论，或者搜下关键字，如果还是有问题可以给我在评论里给我留言，问题很着急的可以加我 ＱＱ：1499065178　，或者给我发邮件：&lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#108;&amp;#101;&amp;#111;&amp;#112;&amp;#097;&amp;#114;&amp;#100;&amp;#112;&amp;#097;&amp;#110;&amp;#064;&amp;#105;&amp;#099;&amp;#108;&amp;#111;&amp;#117;&amp;#100;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;&amp;#108;&amp;#101;&amp;#111;&amp;#112;&amp;#097;&amp;#114;&amp;#100;&amp;#112;&amp;#097;&amp;#110;&amp;#064;&amp;#105;&amp;#099;&amp;#108;&amp;#111;&amp;#117;&amp;#100;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&lt;/a&gt;  ，都可以，如果你已经搭建完成了，可以看看我的另一篇博客&lt;a href=&quot;http://baixin.io/2016/06/HEXO_Advanced/&quot;&gt;HEXO进阶&lt;/a&gt;，有讲如何能百度搜索你的博客、多台电脑使用HEXO发布博客等。我现在的博客是使用 Jekyll 搭建的，如果你想使用我现在的模板请看&lt;a href=&quot;http://baixin.io/2016/10/jekyll_tutorials1/&quot;&gt;Jekyll搭建个人博客&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;正文：&lt;/h2&gt;
&lt;p&gt;　这边教程是针对与Mac的，&lt;a href=&quot;http://ibruce.info/2013/11/22/hexo-your-blog/?utm_source=tuicool&quot;&gt;参考链接&lt;/a&gt;，由于原文讲到的hexo是以前的老版本，所以现在的版本配置的时候会有些改动。&lt;/p&gt;

&lt;p&gt;　之前是想着写博客，一方面是给自己做笔记，可以提升自己的写作、总结能力，一个技术点我们会使用，并不难，但是要做到让让别人也能听懂我们讲得，还是需要一定的技巧和经验的。很多类似于CSDN、博客园也都可以写文章，但是页面的样式我，不是太喜欢，简书还算好点得。最近看到一些大神们的博客（在我的友情链接里有），貌似都是用hexo写得，我也依葫芦画瓢的搭建了一个。不罗嗦了，直接上搭建步骤。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;配置环境&lt;/h2&gt;

&lt;h3 id=&quot;node&quot;&gt;安装Node（必须）&lt;/h3&gt;

&lt;p&gt;作用：用来生成静态页面的
到Node.js&lt;a href=&quot;https://nodejs.org/&quot;&gt;官网&lt;/a&gt;下载相应平台的最新版本，一路安装即可。&lt;/p&gt;

&lt;h3 id=&quot;git&quot;&gt;安装Git（必须）&lt;/h3&gt;
&lt;p&gt;作用：把本地的hexo内容提交到github上去.
安装Xcode就自带有Git，我就不多说了。&lt;/p&gt;

&lt;h3 id=&quot;github&quot;&gt;申请GitHub（必须）&lt;/h3&gt;
&lt;p&gt;作用：是用来做博客的远程创库、域名、服务器之类的，怎么与本地hexo建立连接等下讲。
&lt;a href=&quot;https://github.com/&quot;&gt;github&lt;/a&gt;账号我也不再啰嗦了,没有的话直接申请就行了，跟一般的注册账号差不多，SSH Keys，看你自己了，可以不配制，不配置的话以后每次对自己的博客有改动提交的时候就要手动输入账号密码，配置了就不需要了，怎么配置我就不多说了，网上有很多教程。&lt;/p&gt;

&lt;h3 id=&quot;hexo&quot;&gt;正式安装HEXO　&lt;/h3&gt;
&lt;p&gt;Node和Git都安装好后，可执行如下命令安装hexo：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo npm install -g hexo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-2&quot;&gt;初始化&lt;/h3&gt;
&lt;p&gt;创建一个文件夹，如：Blog，cd到Blog里执行hexo init的。命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hexo init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;好啦，至此，全部安装工作已经完成！&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;生成静态页面&lt;/h3&gt;
&lt;p&gt;继续再Blog目录下执行如下命令，生成静态页面&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hexo generate （hexo g  也可以）   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;本地启动&lt;/h3&gt;
&lt;p&gt;启动本地服务，进行文章预览调试，命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hexo server   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;浏览器输入&lt;a href=&quot;就可以看到最原始的效果了&quot;&gt;http://localhost:4000&lt;/a&gt;
我不知道你们能不能，反正我不能，因为我还有环境没配置好&lt;/p&gt;

&lt;h3 id=&quot;hexo-1&quot;&gt;常见的HEXO配置错误：&lt;/h3&gt;

&lt;p&gt;```
ERROR Plugin load failed: hexo-server&lt;/p&gt;

&lt;p&gt;原因： Besides, utilities are separated into a standalone module. hexo.util is not reachable anymore.&lt;/p&gt;

&lt;p&gt;解决方法，执行命令：$ sudo npm install hexo-server&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;```
执行命令hexo server，提示：Usage: hexo&lt;command /&gt; ….&lt;/p&gt;

&lt;p&gt;原因：我认为是没有生成本地服务&lt;/p&gt;

&lt;p&gt;解决方法，执行命令：$ npm install hexo-server –save&lt;/p&gt;

&lt;p&gt;提示：hexo-server@0.1.2 node_modules/hexo-server
….&lt;/p&gt;

&lt;p&gt;表示成功了&lt;a href=&quot;https://hexo.io/zh-cn/docs/server.html&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;这个时候再执行：$ hexo-server&lt;/p&gt;

&lt;p&gt;得到: INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.&lt;/p&gt;

&lt;p&gt;这个时候再点击&lt;a href=&quot;http://0.0.0.0:4000&quot;&gt;http://0.0.0.0:4000&lt;/a&gt;，正常情况下应该是最原始的画面，但是我看到的是：
白板和Cannot GET /   几个字
原因： 由于2.6以后就更新了，我们需要手动配置些东西，我们需要输入下面三行命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install hexo-renderer-ejs --save
npm install hexo-renderer-stylus --save
npm install hexo-renderer-marked --save
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个时候再重新生成静态文件，命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hexo generate （或hexo g）
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;启动本地服务器：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hexo server （或hexo s）
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再点击网址&lt;a href=&quot;http://0.0.0.0:4000&quot;&gt;http://0.0.0.0:4000&lt;/a&gt; OK终于可以看到属于你自己的blog啦，?，虽然很简陋，但好歹有了一个属于自己的小窝了。&lt;a href=&quot;https://disqus.com/home/discussion/bsspirit/hexogithubweb/&quot;&gt;参考链接&lt;/a&gt;，本地已经简单的设置好了，但是现在域名和服务器都是基于自己的电脑，接下来需要跟github进行关联。&lt;/p&gt;

&lt;h2 id=&quot;github-1&quot;&gt;配置Github&lt;/h2&gt;

&lt;h3 id=&quot;repository&quot;&gt;建立Repository&lt;/h3&gt;

&lt;p&gt;建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】，固定写法
然后建立关联，我的Blog在本地/Users/leopard/Blog，Blog是我之前建的东西也全在这里面，有：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Blog      &lt;br /&gt;
　｜      &lt;br /&gt;
　｜－－ _config.yml     &lt;br /&gt;
　｜－－ node_modules    &lt;br /&gt;
　｜－－ public              &lt;br /&gt;
　｜－－ source                                                &lt;br /&gt;
　｜－－ db.json	        &lt;br /&gt;
　｜－－ package.json        &lt;br /&gt;
　｜－－ scaffolds        &lt;br /&gt;
　｜－－ themes          　　　　　
　　　&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;现在我们需要_config.yml文件，来建立关联，命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim _config.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;翻到最下面，改成我这样子的，注意： &lt;code class=&quot;highlighter-rouge&quot;&gt;: 后面要有空格&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deploy:
  type: git
  repository: https://github.com/leopardpan/leopardpan.github.io.git
  branch: master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;执行如下命令才能使用git部署&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;网上会有很多说法，有的type是github, 还有repository 最后面的后缀也不一样，是github.com.git，我也踩了很多坑，我现在的版本是hexo: 3.1.1，执行命令hexo -vsersion就出来了,貌似3.0后全部改成我上面这种格式了。
忘了说了，我没用SSH Keys如果你用了SSH Keys的话直接在github里复制SSH的就行了，总共就两种协议，相信你懂的。
然后，执行配置命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hexo deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;　然后再浏览器中输入&lt;a href=&quot;http://leopardpan.github.io/&quot;&gt;http://leopardpan.github.io/&lt;/a&gt;就行了，我的 github 的账户叫 leopardpan ,把这个改成你 github 的账户名就行了&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;部署步骤&lt;/h3&gt;

&lt;p&gt;每次部署的步骤，可按以下三步来进行。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hexo clean
hexo generate
hexo deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;一些常用命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hexo new &quot;postName&quot; #新建文章
hexo new page &quot;pageName&quot; #新建页面
hexo generate #生成静态页面至public目录
hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）
hexo deploy #将.deploy目录部署到GitHub
hexo help  #查看帮助
hexo version  #查看Hexo的版本
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这里有大量的&lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Themes&quot;&gt;主题列表&lt;/a&gt;使用方法里面
都有详细的介绍，我就不多说了。    &lt;br /&gt;
我这里有几款个人认为不错的主题，免去你们，一个一个的选了，欢迎吐槽我的审美，?       &lt;br /&gt;
　&lt;a href=&quot;https://github.com/daisygao/hexo-themes-cover&quot;&gt;Cover&lt;/a&gt; - A chic theme with facebook-like cover photo    &lt;br /&gt;
　&lt;a href=&quot;https://github.com/henryhuang/oishi&quot;&gt;Oishi&lt;/a&gt; - A white theme based on Landscape plus and Writing.    &lt;br /&gt;
　&lt;a href=&quot;https://github.com/hardywu/hexo-theme-sidebar&quot;&gt;Sidebar&lt;/a&gt; - Another theme based on Light with a simple sidebar  &lt;br /&gt;
　&lt;a href=&quot;https://github.com/SuperKieran/TKL&quot;&gt;TKL&lt;/a&gt; - A responsive design theme for Hexo. 一个设计优雅的响应式主题  &lt;br /&gt;
　&lt;a href=&quot;https://github.com/levonlin/Tinnypp&quot;&gt;Tinnypp&lt;/a&gt; - A clean, simple theme based on Tinny   &lt;br /&gt;
　&lt;a href=&quot;https://github.com/yunlzheng/hexo-themes-writing&quot;&gt;Writing&lt;/a&gt; - A small and simple hexo theme based on Light   &lt;br /&gt;
　&lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot;&gt;Yilia&lt;/a&gt; - Responsive and simple style 优雅简洁响应式主题，我用得就是这个。  &lt;br /&gt;
　&lt;a href=&quot;https://github.com/Voidly/pacman&quot;&gt;Pacman voidy&lt;/a&gt; - A theme with dynamic tagcloud and dynamic snow&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;一些基本路径&lt;/h3&gt;
&lt;p&gt;　文章在 source/_posts，编辑器可以用 Sublime，支持 markdown 语法。如果想修改头像可以直接在主题的 _config.yml 文件里面修改，友情链接，之类的都在这里，修改名字在 public/index.html 里修改，开始打理你的博客吧，有什么问题或者建议，都可以提出来，我会继续完善的。&lt;/p&gt;

&lt;p&gt;Markdown语法参考链接: &lt;a href=&quot;https://www.zybuluo.com/mdeditor&quot;&gt;作业部落&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;qa&quot;&gt;Q&amp;amp;A&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;问：如何让文章想只显示一部分和一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;阅读全文&lt;/code&gt; 的按钮？     &lt;br /&gt;
答：在文章中加一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt; ， &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt; 后面的内容就不会显示出来了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;问：本地部署成功了，也能预览效果，但使用 username.github.io 访问，&lt;code class=&quot;highlighter-rouge&quot;&gt;出现 404 &lt;/code&gt; .    &lt;br /&gt;
答：首先确认 hexo d 命令执行是否报错，如果没有报错，再查看一下你的 github 的 username.github.io 仓库，你的博客是否已经成功提交了，你的 github 邮箱也要通过验证才行。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;转载请注明原地址，潘柏信的博客：&lt;a href=&quot;http://leopardpan.github.io&quot;&gt;http://leopardpan.github.io&lt;/a&gt; 谢谢！&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://scott-cry.win//2017/04/HEXO%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
        <guid isPermaLink="true">http://scott-cry.win//2017/04/HEXO%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
        
        <category>博客</category>
        
        
      </item>
    
  </channel>
</rss>
